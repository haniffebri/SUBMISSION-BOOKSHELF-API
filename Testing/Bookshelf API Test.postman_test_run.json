{
	"id": "9da7bfc6-1b76-4d88-a84e-6a5662edf623",
	"name": "Bookshelf API Test",
	"timestamp": "2023-12-23T13:06:08.708Z",
	"collection_id": "8348507-c854c599-5224-4cd3-87f2-17bc9a8c8a50",
	"folder_id": 0,
	"environment_id": "8348507-494fa36c-2e32-486a-bb15-108572c96b35",
	"totalPass": 80,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2023-12-23T13:06:04.752Z",
	"totalFail": 24,
	"results": [
		{
			"id": "7b76c7bb-edde-4a21-bf0c-02dc887e6d87",
			"name": "[Mandatory] Add Book With Complete Data",
			"url": "http://localhost:9000/books",
			"time": 10,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "e5604972-158b-40d2-ad58-b8de6a25cc0e",
			"name": "[Mandatory] Add Book With Finished Reading",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "c2b105b7-7158-4938-8f83-410cae1f5ea8",
			"name": "[Mandatory] Add Book Without Name",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "3ffa20c2-e58f-4ec7-aa12-87809294f58c",
			"name": "[Mandatory] Add Book with Page Read More Than Page Count",
			"url": "http://localhost:9000/books",
			"time": 5,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 400": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 400": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false
				}
			]
		},
		{
			"id": "c272cc9f-6957-46b6-aaae-cc5be814810a",
			"name": "[Mandatory] Get All Books",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains two items": false,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains two items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains two items": false,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "f8cb039e-d6d1-4d99-b456-fda63e322fef",
			"name": "[Mandatory] Get Detail Books With Correct Id",
			"url": "http://localhost:9000/books/cQzFk9Ot2vK3YBap",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 200": false,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": false,
				"response body data object should contain book object": false,
				"book object should contain correct property and value": false
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"response body data object should contain book object": {
					"pass": 0,
					"fail": 1
				},
				"book object should contain correct property and value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"response code should be 200": false,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": false,
					"response body data object should contain book object": false,
					"book object should contain correct property and value": false
				}
			]
		},
		{
			"id": "f502cb16-eb96-4d7a-9125-548bc3c9a746",
			"name": "[Mandatory] Get Detail Finished Book",
			"url": "http://localhost:9000/books/SHFti0_U6M0Wq9On",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 200": false,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": false,
				"response body data object should contain book object": false,
				"book object should contain correct property and value": false
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"response body data object should contain book object": {
					"pass": 0,
					"fail": 1
				},
				"book object should contain correct property and value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"response code should be 200": false,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": false,
					"response body data object should contain book object": false,
					"book object should contain correct property and value": false
				}
			]
		},
		{
			"id": "d5bcb04a-f00f-405f-a472-e941a94a67b2",
			"name": "[Mandatory] Get Detail Books With Invalid Id",
			"url": "http://localhost:9000/books/efhbwjfhbwe",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"response code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true
				}
			]
		},
		{
			"id": "8876034d-83e8-4066-b6e3-b211af870906",
			"name": "[Mandatory] Update Book With Complete Data",
			"url": "http://localhost:9000/books/cQzFk9Ot2vK3YBap",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 200": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false,
				"when get detail books": true,
				"book object should contain updated values": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain updated values": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false,
					"when get detail books": true,
					"book object should contain updated values": false
				}
			]
		},
		{
			"id": "077583ee-a51a-4f40-afa3-33fca6795002",
			"name": "[Mandatory] Update Book Without Name",
			"url": "http://localhost:9000/books/AHjuFZEr7l8x9dDd",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "b3410699-f3eb-4d8d-82bc-05b39082d8c7",
			"name": "[Mandatory] Update Book With Page Read More Than Page Count",
			"url": "http://localhost:9000/books/Wk23FqZnQD_j1_zI",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "6dc288c4-ba7d-4f6a-a493-3b4dce8f7bd2",
			"name": "[Mandatory] Update Book with Invalid Id",
			"url": "http://localhost:9000/books/egweege",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "36da01b1-1ed8-4d63-adaf-37cf72ee3733",
			"name": "[Mandatory] Delete Book with Correct Id",
			"url": "http://localhost:9000/books/cQzFk9Ot2vK3YBap",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 200": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false,
				"when get detail books": true,
				"The book should be not found": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"status code should be 200": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false,
					"when get detail books": true,
					"The book should be not found": false
				}
			]
		},
		{
			"id": "1f89aa55-45a6-4dae-b7d0-111c27708849",
			"name": "[Mandatory] Delete Finished book",
			"url": "http://localhost:9000/books/Wk23FqZnQD_j1_zI",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 200": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false,
				"when get detail books": true,
				"The book should be not found": false
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 200": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false,
					"when get detail books": true,
					"The book should be not found": false
				}
			]
		},
		{
			"id": "a523fe31-182a-408a-ae2e-b7da2b916bda",
			"name": "[Mandatory] Delete Book with Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "58991a68-6535-4be1-8e47-61fe8857c628",
			"name": "Add Reading and Finished Book",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				4
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "3a7a618f-a432-44d5-9e11-0024dae50e48",
			"name": "Add Reading and Unfinished Book with \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				4
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "8c4645fd-eff4-4133-b6bd-c8e1b2f06108",
			"name": "Add Unreading Books and Unfinished Book \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "2fd046b9-5a1a-4ba5-9446-c073c23f8151",
			"name": "Add Unreading Books and Unfinished Book",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				4
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "3a9a1c47-109b-4300-a612-68c6dc5e15ca",
			"name": "[Optional] Get All Reading Books",
			"url": "http://localhost:9000/books?reading=1",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "56243b40-9a88-4544-bd73-27911de6c1c4",
			"name": "[Optional] Get All Unreading Books",
			"url": "http://localhost:9000/books?reading=0",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains at 2 items": false,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains at 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains at 2 items": false,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "2bebf0ec-2c7b-45c6-a63e-4a6438e18d4b",
			"name": "[Optional] Get All Finished Books",
			"url": "http://localhost:9000/books?finished=1",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 1 items": false,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 1 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 1 items": false,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "1e895e76-1c50-48ad-baff-47016e0cd1df",
			"name": "[Optional] Get All Unfinished Books",
			"url": "http://localhost:9000/books?finished=0",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 3 items": false,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 3 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 3 items": false,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "f95aabea-0f21-41a5-875f-cd8b6aeacfa6",
			"name": "[Optional] Get All Books Contains \"Dicoding\" Name",
			"url": "http://localhost:9000/books?name=Dicoding",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": false,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": false,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 95,
	"collection": {
		"requests": [
			{
				"id": "7b76c7bb-edde-4a21-bf0c-02dc887e6d87",
				"method": "POST"
			},
			{
				"id": "e5604972-158b-40d2-ad58-b8de6a25cc0e",
				"method": "POST"
			},
			{
				"id": "c2b105b7-7158-4938-8f83-410cae1f5ea8",
				"method": "POST"
			},
			{
				"id": "3ffa20c2-e58f-4ec7-aa12-87809294f58c",
				"method": "POST"
			},
			{
				"id": "c272cc9f-6957-46b6-aaae-cc5be814810a",
				"method": "GET"
			},
			{
				"id": "f8cb039e-d6d1-4d99-b456-fda63e322fef",
				"method": "GET"
			},
			{
				"id": "f502cb16-eb96-4d7a-9125-548bc3c9a746",
				"method": "GET"
			},
			{
				"id": "d5bcb04a-f00f-405f-a472-e941a94a67b2",
				"method": "GET"
			},
			{
				"id": "8876034d-83e8-4066-b6e3-b211af870906",
				"method": "PUT"
			},
			{
				"id": "077583ee-a51a-4f40-afa3-33fca6795002",
				"method": "PUT"
			},
			{
				"id": "b3410699-f3eb-4d8d-82bc-05b39082d8c7",
				"method": "PUT"
			},
			{
				"id": "6dc288c4-ba7d-4f6a-a493-3b4dce8f7bd2",
				"method": "PUT"
			},
			{
				"id": "36da01b1-1ed8-4d63-adaf-37cf72ee3733",
				"method": "DELETE"
			},
			{
				"id": "1f89aa55-45a6-4dae-b7d0-111c27708849",
				"method": "DELETE"
			},
			{
				"id": "a523fe31-182a-408a-ae2e-b7da2b916bda",
				"method": "DELETE"
			},
			{
				"id": "58991a68-6535-4be1-8e47-61fe8857c628",
				"method": "POST"
			},
			{
				"id": "3a7a618f-a432-44d5-9e11-0024dae50e48",
				"method": "POST"
			},
			{
				"id": "8c4645fd-eff4-4133-b6bd-c8e1b2f06108",
				"method": "POST"
			},
			{
				"id": "2fd046b9-5a1a-4ba5-9446-c073c23f8151",
				"method": "POST"
			},
			{
				"id": "3a9a1c47-109b-4300-a612-68c6dc5e15ca",
				"method": "GET"
			},
			{
				"id": "56243b40-9a88-4544-bd73-27911de6c1c4",
				"method": "GET"
			},
			{
				"id": "2bebf0ec-2c7b-45c6-a63e-4a6438e18d4b",
				"method": "GET"
			},
			{
				"id": "1e895e76-1c50-48ad-baff-47016e0cd1df",
				"method": "GET"
			},
			{
				"id": "f95aabea-0f21-41a5-875f-cd8b6aeacfa6",
				"method": "GET"
			}
		]
	}
}